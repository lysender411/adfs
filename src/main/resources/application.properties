server.servlet.context-path=/join
application.name=eis_oidc_srv
server.port: 9018

spring.http.encoding.force=true
spring.main.allow-bean-definition-overriding=true

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

spring.security.oauth2.client.registration.adfs.client-name=adfs
spring.security.oauth2.client.registration.adfs.client-id=cd9fb651-0cff-42c0-a41c-185ca64d07eb
spring.security.oauth2.client.registration.adfs.client-secret=taWToOXxRQSoqm2_laCGZMjXplN1z7gfRb6J1fyx
spring.security.oauth2.client.registration.adfs.redirect-uri=http://d1xd0146797.wkstn.toronto.ca:9018/join/login/oauth2/code/adfs
spring.security.oauth2.client.registration.adfs.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.adfs.scope=openid
spring.security.oauth2.client.registration.adfs.success_url=http://d1xd0146797.wkstn.toronto.ca:9018/join/adfs/authorize
spring.security.oauth2.client.registration.adfs.failure_url=http://d1xd0146797.wkstn.toronto.ca:9018/join/adfs/invalidate

spring.security.oauth2.client.provider.adfs.authorization-uri=https://ma-qa.toronto.ca/adfs/oauth2/authorize
spring.security.oauth2.client.provider.adfs.token-uri=https://ma-qa.toronto.ca/adfs/oauth2/token
spring.security.oauth2.client.provider.adfs.user-info-uri=https://ma-qa.toronto.ca/adfs/userinfo
spring.security.oauth2.client.provider.adfs.logout=https://ma-qa.toronto.ca/adfs/oauth2/logout
spring.security.oauth2.client.provider.adfs.jwk-set-uri=https://ma-qa.toronto.ca/adfs/discovery/keys
spring.security.oauth2.client.provider.adfs.user-name-attribute=upn

http.setting.allowedOrigin=https://webapps.intra.dev-toronto.ca


#http.setting.trustStore=classpath:adfs_qa_cert.jks
#http.setting.trustStorePassword=changeit







#spring.security.oauth2.client.registration.adfs.scope=openid
#spring.security.oauth2.client.registration.adfs.failure_url=/oauth2/callback1/{registrationId}
#spring.security.oauth2.client.registration.adfs.success_url=/adfs/authorize
#spring.security.oauth2.client.provider.adfs.logout=/oauth2/callback2/{registrationId}
#spring.security.oauth2.client.provider.adfs.token-uri=https://ma-qa.toronto.ca/adfs/oauth2/token/
#spring.security.oauth2.client.registration.adfs.clientId=cd9fb651-0cff-42c0-a41c-185ca64d07eb
#spring.security.oauth2.client.registration.adfs.clientSecret=taWToOXxRQSoqm2_laCGZMjXplN1z7gfRb6J1fyx
#spring.security.oauth2.client.registration.adfs.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.adfs.redirectUri=https://d1xd0146797.wkstn.toronto.ca:9015/join/oauth2/callback/adfs
#spring.security.oauth2.client.provider.adfs.authorizationUri=https://ma-qa.toronto.ca/adfs/oauth2/authorize/

# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:job_keystore.p12
# The password used to generate the certificate
#server.ssl.key-store-password=Password1
# The alias mapped to the certificate
#server.ssl.key-alias=msjobkey

logging.level.root=info
logging.level.ca.toronto=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG


